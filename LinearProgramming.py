import matplotlib.pyplot as plt
from pulp import *

"""
проверка проведена на задаче №1 которая была дана на паре 26,9

Компания «Краски для покраски» производит краску для
внутренних и наружных работ из сырья двух типов: М1 и М2. Следующая
таблица представляет основные данные для задачи.
Отдел маркетинга компании ограничил ежедневное производство
краски для внутренних работ до 2 тонн (из-за отсутствия надлежащего
спроса), а также поставил условие, чтобы ежедневное производство краски
для внутренних работ не превышало более чем на тонну аналогичный
показатель производства краски для внешних работ. Компания хочет
определить оптимальное (наилучшее) соотношение между видами
выпускаемой продукции для максимизации общего ежедневного дохода.


а1=6 ;а2=1 ;в1=4 ;в2=2 ;с1=24 ;с2=6 ;А=5 ;В=4 ;
Максимальная прибыль: 2.6666667 НЕВЕРНО!
Количество продукции A: 2.6666667 НЕВЕРНО!
Количество продукции B: 1.6666667 НЕВЕРНО!
"""


# Исходные данные для задачи:
a1 = 6
a2 = 1
# a3 = int(input("a3= "))
b1 = 4
b2 = 2
# b3 =int(input("b3= "))
c1 = 24
c2 = 6
# c3 = int(input("c3= "))
alpha = 5
beta = 4

# Нет условий проверки, при вводе неправильного значения (с точки зрения компилятора, программа вылетает)
# Я бы сделала так
# Indicator = ["a1= ", "a2= ", "b1= ", "b2= ", "c1= ", "c2= ", "alpha= ", "beta= "]
# Indicator_value = []
# i = 0
#
# while i < len(Indicator):
#     buf_value = input(Indicator[i])
#     if buf_value.isdigit():
#         Indicator_value.append(int(buf_value))
#         i += 1  # Увеличиваем индекс только при корректном вводе
#     else:
#         print(f"Введенное значение {buf_value} некорректно")
#
# Получение значения
# b1 = Indicator_value[Indicator.index("b2= ")]


# Создание оптимизационной задачи
prob = LpProblem("MaximizeProfit", LpMaximize)

# Определение переменных решения
x = LpVariable("xA", lowBound=0)
y = LpVariable("xB", lowBound=0)

# Определение целевой функции
prob += alpha * x + beta * y

# Добавление ограничений на использование материалов
prob += a1 * x + b1 * y <= c1
prob += a2 * x + b2 * y <= c2
# prob += a3 * x + b3 * y <= c3


prob += x >= 0
prob += y >= 0
#prob += x - y <= 1 #  неверно
#prob += -x + y <= 1

prob += y <= 2

# Решение задачи линейного программирования
prob.solve()

# ПРИ ВЫКАТЫВАНИИ КОДА В ПРОД, НЕОБХОДИМО УКАЗАТЬ ВЕРСИЮ БИБЛИОТЕКИ И ВЕРСИЮ PYTHON, поскольку для разных версий,
# может отличаться синтаксис конструкций и часть кода будет не рабочая!

# Вывод результатов
print("Максимальная прибыль:", int(pulp.value(prob.objective)))
print("Количество продукции A:", int(pulp.value(x)))
print("Количество продукции B:", int(pulp.value(y)))

# Построение векторного графика
fig, ax = plt.subplots()
ax.quiver(0, 0, int(pulp.value(x)), int(pulp.value(y)), angles='xy', scale_units='xy', scale=1, color='blue')
ax.set_xlim([0, max(int(pulp.value(x)), int(pulp.value(y))) + 15])
ax.set_ylim([0, max(int(pulp.value(x)), int(pulp.value(y))) + 15])
plt.xlabel("Product A")
plt.ylabel("Product B")
plt.title("Optimal Production")
plt.grid()
plt.show()